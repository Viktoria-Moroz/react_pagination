{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","perPage","total","currentPage","onPageChange","pageNumbers","i","Math","ceil","push","_jsx","_Fragment","children","_jsxs","className","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","concat","App","setCurrentPage","useState","setPerPage","lastItemsIndex","firstItemsIndex","currentItems","slice","length","value","onChange","event","parseInt","target","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uLASO,MAAMA,EAA8BC,IAKpC,IALqC,QAC1CC,EAAO,MACPC,EAAK,YACLC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAc,GAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAQD,GAAUK,GAAK,EACpDD,EAAYI,KAAKH,GAGnB,OACEI,cAAAC,WAAA,CAAAC,SACEC,eAAA,MAAIC,UAAU,aAAYF,SAAA,CACxBF,cAAA,MACEI,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBb,IACTS,SAEHF,cAAA,KACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAASA,KACa,IAAhBf,GACFC,EAAaD,EAAc,IAE7BS,SACH,WAIFP,EAAYc,KAAIC,GACfV,cAAA,MACEI,UAAWC,IAAG,YAAa,CACzBM,OAAQlB,IAAgBiB,IACvBR,SAGHF,cAAA,KACE,UAAQ,WACRI,UAAU,YACVG,KAAK,KACLC,QAASA,KACPd,EAAagB,IACbR,SAEDQ,KAVEA,KAcTV,cAAA,MACEI,UAAWC,IAAG,YAAa,CACzBC,SAAUb,IAAgBI,KAAKC,KAAKN,EAAQD,KAC3CW,SAEHF,cAAA,KACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBI,KAAKC,KAAKN,EAAQD,GACjDiB,QAASA,KACHf,IAAgBI,KAAKC,KAAKN,EAAQD,IACpCG,EAAaD,EAAc,IAE7BS,SACH,iBCvELU,ECNC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IAAIR,KAAIO,GAAC,QAAAE,OAAYF,KAEpCG,EAAgBA,KAC3B,MAAO1B,EAAa2B,GAAkBC,mBAAS,IACxC9B,EAAS+B,GAAcD,mBAAS,GAOjCE,EAAiB9B,EAAcF,EAC/BiC,EAAkBD,EAAiBhC,EACnCkC,EAAe,IAAIb,EAAMc,MAAMF,EAAiBD,IAEtD,OACEpB,eAAA,OAAKC,UAAU,YAAWF,SAAA,CACxBF,cAAA,MAAAE,SAAI,0BAEJF,cAAA,KAAGI,UAAU,OAAO,UAAQ,OAAMF,SAAA,QAAAgB,OACvBzB,EAAW,YAAAyB,OAAWM,EAAkB,EAAC,OAAAN,OAAMK,EAAiBX,EAAMe,OAASf,EAAMe,OAASJ,EAAc,aAGvHpB,eAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAC7BF,cAAA,OAAKI,UAAU,0BAAyBF,SACtCC,eAAA,UACEyB,MAAOrC,EACPsC,SArBYC,IACpBR,EAAWS,SAASD,EAAME,OAAOJ,MAAO,KACxCR,EAAe,IAoBP,UAAQ,kBACRa,GAAG,kBACH7B,UAAU,eAAcF,SAAA,CAExBF,cAAA,UAAQ4B,MAAM,IAAG1B,SAAC,MAClBF,cAAA,UAAQ4B,MAAM,IAAG1B,SAAC,MAClBF,cAAA,UAAQ4B,MAAM,KAAI1B,SAAC,OACnBF,cAAA,UAAQ4B,MAAM,KAAI1B,SAAC,YAIvBF,cAAA,SAAOkC,QAAQ,kBAAkB9B,UAAU,qBAAoBF,SAAC,sBAIlEF,cAACX,EAAU,CACTG,MAAOoB,EAAMe,OACbpC,QAASA,EACTE,YAAaA,EACbC,aAAcgB,GAAQU,EAAeV,KAEvCV,cAAA,MAAAE,SACGuB,EAAahB,KAAI0B,GAChBnC,cAAA,MAAI,UAAQ,OAAME,SACfiC,GADqBA,WEtDlCC,IAASC,OAAOrC,cAACmB,EAAG,IAAKmB,SAASC,eAAe,U","file":"static/js/main.b3ac89d4.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  total,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageNumbers.map(page => (\n          <li\n            className={cn('page-item', {\n              active: currentPage === page,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => {\n                onPageChange(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === Math.ceil(total / perPage),\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === Math.ceil(total / perPage)}\n            onClick={() => {\n              if (currentPage !== Math.ceil(total / perPage)) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const lastItemsIndex = currentPage * perPage;\n  const firstItemsIndex = lastItemsIndex - perPage;\n  const currentItems = [...items.slice(firstItemsIndex, lastItemsIndex)];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemsIndex + 1} - ${lastItemsIndex > items.length ? items.length : lastItemsIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={handleChange}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}